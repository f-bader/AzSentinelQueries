id: e9f741a9-8ad4-4e68-83ac-9b2f3b5d12eg
name: Command Line with High Amount of ASCII Non-Alphanumeric Characters
version: 1.0.6
kind: Scheduled
description: Detects suspicious command line activity with a high number of ASCII non-alphanumeric characters, potentially indicative of USB worm activity and behavior associated with Gamarue.
severity: High
queryFrequency: 30m
queryPeriod: 30m
triggerOperator: gt
triggerThreshold: 0
tactics:
  - Execution
query: |-
  Event
  | where Source == "Microsoft-Windows-Sysmon"
  | extend RenderedDescription = tostring(split(RenderedDescription, ":")[0])
  | extend EventData = parse_xml(EventData).DataItem.EventData.Data
  | mv-expand bagexpansion=array EventData
  | evaluate bag_unpack(EventData)
  | extend Key = tostring(column_ifexists('@Name', "")), Value = tostring(column_ifexists('#text', ""))
  | evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, _ResourceId)
  | extend TimeGenerated = column_ifexists("TimeGenerated", ""), Source = column_ifexists("Source", ""), EventLog = column_ifexists("EventLog", ""), Computer = column_ifexists("Computer", ""), EventLevel = column_ifexists("EventLevel", ""), EventLevelName = column_ifexists("EventLevelName", ""), EventID = column_ifexists("EventID", ""), UserName = column_ifexists("UserName", ""), RenderedDescription = column_ifexists("RenderedDescription", ""), MG = column_ifexists("MG", ""), ManagementGroupName = column_ifexists("ManagementGroupName", ""), _ResourceId = column_ifexists("_ResourceId", ""), UtcTime = column_ifexists("UtcTime", ""), ID = column_ifexists("ID", ""), Description = column_ifexists("Description", ""), RuleName = column_ifexists("RuleName", ""), ProcessGuid = column_ifexists("ProcessGuid", ""), ProcessId = column_ifexists("ProcessId", ""), Image = column_ifexists("Image", ""), FileVersion = column_ifexists("FileVersion", ""), Product = column_ifexists("Product", ""), Company = column_ifexists("Company", ""), OriginalFileName = column_ifexists("OriginalFileName", ""), CommandLine = column_ifexists("CommandLine", ""), CurrentDirectory = column_ifexists("CurrentDirectory", ""), User = column_ifexists("User", ""), LogonGuid = column_ifexists("LogonGuid", ""), LogonId = column_ifexists("LogonId", ""), TerminalSessionId = column_ifexists("TerminalSessionId", ""), IntegrityLevel = column_ifexists("IntegrityLevel", ""), Hashes = column_ifexists("Hashes", ""), ParentProcessGuid = column_ifexists("ParentProcessGuid", ""), ParentProcessId = column_ifexists("ParentProcessId", ""), ParentImage = column_ifexists("ParentImage", ""), ParentCommandLine = column_ifexists("ParentCommandLine", ""), ParentUser = column_ifexists("ParentUser", ""), TargetFilename = column_ifexists("TargetFilename", ""), CreationUtcTime = column_ifexists("CreationUtcTime", ""), PreviousCreationUtcTime = column_ifexists("PreviousCreationUtcTime", ""), Protocol = column_ifexists("Protocol", ""), Initiated = column_ifexists("Initiated", ""), SourceIsIpv6 = column_ifexists("SourceIsIpv6", ""), SourceIp = column_ifexists("SourceIp", ""), SourceHostname = column_ifexists("SourceHostname", ""), SourcePort = column_ifexists("SourcePort", ""), SourcePortName = column_ifexists("SourcePortName", ""), DestinationIsIpv6 = column_ifexists("DestinationIsIpv6", ""), DestinationIp = column_ifexists("DestinationIp", ""), DestinationHostname = column_ifexists("DestinationHostname", ""), DestinationPort = column_ifexists("DestinationPort", ""), DestinationPortName = column_ifexists("DestinationPortName", ""), State = column_ifexists("State", ""), Version = column_ifexists("Version", ""), SchemaVersion = column_ifexists("SchemaVersion", ""), ImageLoaded = column_ifexists("ImageLoaded", ""), Signed = column_ifexists("Signed", ""), Signature = column_ifexists("Signature", ""), SignatureStatus = column_ifexists("SignatureStatus", ""), SourceProcessGuid = column_ifexists("SourceProcessGuid", ""), SourceProcessId = column_ifexists("SourceProcessId", ""), SourceImage = column_ifexists("SourceImage", ""), TargetProcessGuid = column_ifexists("TargetProcessGuid", ""), TargetProcessId = column_ifexists("TargetProcessId", ""), TargetImage = column_ifexists("TargetImage", ""), NewThreadId = column_ifexists("NewThreadId", ""), StartAddress = column_ifexists("StartAddress", ""), StartModule = column_ifexists("StartModule", ""), StartFunction = column_ifexists("StartFunction", ""), SourceUser = column_ifexists("SourceUser", ""), TargetUser = column_ifexists("TargetUser", ""), Device = column_ifexists("Device", ""), SourceProcessGUID = column_ifexists("SourceProcessGUID", ""), SourceThreadId = column_ifexists("SourceThreadId", ""), TargetProcessGUID = column_ifexists("TargetProcessGUID", ""), GrantedAccess = column_ifexists("GrantedAccess", ""), CallTrace = column_ifexists("CallTrace", ""), EventType = column_ifexists("EventType", ""), TargetObject = column_ifexists("TargetObject", ""), Details = column_ifexists("Details", ""), NewName = column_ifexists("NewName", ""), Hash = column_ifexists("Hash", ""), Contents = column_ifexists("Contents", ""), Configuration = column_ifexists("Configuration", ""), ConfigurationFileHash = column_ifexists("ConfigurationFileHash", ""), PipeName = column_ifexists("PipeName", ""), Operation = column_ifexists("Operation", ""), EventNamespace = column_ifexists("EventNamespace", ""), Name = column_ifexists("Name", ""), Query = column_ifexists("Query", ""), Type = column_ifexists("Type", ""), Destination = column_ifexists("Destination", ""), Consumer = column_ifexists("Consumer", ""), Filter = column_ifexists("Filter", ""), QueryName = column_ifexists("QueryName", ""), QueryStatus = column_ifexists("QueryStatus", ""), QueryResults = column_ifexists("QueryResults", ""), IsExecutable = column_ifexists("IsExecutable", ""), Archived = column_ifexists("Archived", ""), Session = column_ifexists("Session", ""), ClientInfo = column_ifexists("ClientInfo", "")
  | extend SourceProcessGuid = iff(isnotempty(SourceProcessGUID), SourceProcessGUID, SourceProcessGuid), TargetProcessGuid = iff(isnotempty(TargetProcessGUID), TargetProcessGUID, TargetProcessGuid)
  | project-away SourceProcessGUID, TargetProcessGUID  
  | parse RuleName with * "technique_id=" TechniqueId "," * "technique_name=" TechniqueName
  | parse Hashes with * "SHA1=" SHA1 "," * "MD5=" MD5 "," * "SHA256=" SHA256 "," * "IMPHASH=" IMPHASH 
  | where CommandLine matches regex @"(?i)[-_#~<>]"
  | extend minus = countof(CommandLine, "-")
  | extend underscore = countof(CommandLine, "_")
  | extend hash = countof(CommandLine, "#")
  | extend tilde = countof(CommandLine, "~")
  | extend lessinequality = countof(CommandLine, "<")
  | extend moreinequality = countof(CommandLine, ">")
  | extend Total = minus + underscore + hash + tilde + lessinequality + moreinequality
  | project-reorder TimeGenerated, Computer, UserName, EventID, Image, CommandLine, minus, underscore, hash, tilde, lessinequality, moreinequality, Total
  | sort by Total desc
  | where Total >= 10
suppressionEnabled: false
incidentConfiguration:
  createIncident: true
  groupingConfiguration:
    matchingMethod: AllEntities
    reopenClosedIncident: false
    groupByCustomDetails: []
    groupByEntities: []
    groupByAlertDetails: []
    lookbackDuration: 5h
    enabled: false
eventGroupingSettings:
  aggregationKind: AlertPerResult
customDetails:
  CommandLine: CommandLine
  TotalSpecialChars: Total
  ProcessImage: Image
entityMappings:
  - entityType: Account
    fieldMappings:
      - columnName: UserName
        identifier: FullName
  - entityType: Host
    fieldMappings:
      - columnName: Computer
        identifier: HostName
suppressionDuration: 5h

